"""empty message

Revision ID: f3542f6a46f8
Revises: 
Create Date: 2018-02-13 19:05:04.960740

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f3542f6a46f8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('surveys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('pretty_name', sa.String(length=80), nullable=True),
    sa.Column('language', sa.String(length=2), nullable=True),
    sa.Column('about_text', sa.Text(), nullable=True),
    sa.Column('terms_of_service', sa.Text(), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('avatar_uri', sa.String(length=255), nullable=True),
    sa.Column('max_survey_days', sa.Integer(), nullable=True),
    sa.Column('max_prompts', sa.Integer(), nullable=True),
    sa.Column('trip_break_interval', sa.Integer(), nullable=False),
    sa.Column('trip_subway_buffer', sa.Integer(), nullable=False),
    sa.Column('last_export', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('record_acceleration', sa.Boolean(), nullable=True),
    sa.Column('record_mode', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tokens_new_survey',
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=14), nullable=True),
    sa.Column('usages', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_new_survey_token'), 'tokens_new_survey', ['token'], unique=True)
    op.create_table('web_user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('mobile_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.Column('model', sa.String(length=160), nullable=True),
    sa.Column('itinerum_version', sa.String(length=16), nullable=True),
    sa.Column('os', sa.String(length=16), nullable=True),
    sa.Column('os_version', sa.String(length=16), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('prompt_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('prompt_num', sa.Integer(), nullable=True),
    sa.Column('prompt_type', sa.Integer(), nullable=True),
    sa.Column('prompt_label', sa.String(length=100), nullable=True),
    sa.Column('prompt_text', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prompt_questions_prompt_num'), 'prompt_questions', ['prompt_num'], unique=False)
    op.create_table('survey_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('question_num', sa.Integer(), nullable=True),
    sa.Column('question_type', sa.Integer(), nullable=True),
    sa.Column('question_label', sa.String(length=100), nullable=True),
    sa.Column('question_text', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_survey_questions_question_num'), 'survey_questions', ['question_num'], unique=False)
    op.create_table('survey_subway_stops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=16, scale=10), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=16, scale=10), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_survey_subway_stops_survey_id'), 'survey_subway_stops', ['survey_id'], unique=False)
    op.create_table('tokens_researcher_invite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(length=8), nullable=True),
    sa.Column('usages', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_researcher_invite_token'), 'tokens_researcher_invite', ['token'], unique=False)
    op.create_index('researcher_invite_survey_active_idx', 'tokens_researcher_invite', ['survey_id', 'active'], unique=True, postgresql_where=sa.text(u'active'))
    op.create_table('web_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('participant_uuid', sa.String(length=36), nullable=True),
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('participant_uuid')
    )
    op.create_table('mobile_cancelled_prompt_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('mobile_id', sa.Integer(), nullable=True),
    sa.Column('prompt_uuid', sa.String(length=36), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('displayed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_travelling', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['mobile_id'], [u'mobile_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobile_cancelled_prompt_responses_prompt_uuid'), 'mobile_cancelled_prompt_responses', ['prompt_uuid'], unique=False)
    op.create_table('mobile_coordinates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('mobile_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=10, scale=7), nullable=True),
    sa.Column('altitude', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('speed', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('direction', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('h_accuracy', sa.Float(), nullable=True),
    sa.Column('v_accuracy', sa.Float(), nullable=True),
    sa.Column('acceleration_x', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('acceleration_y', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('acceleration_z', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.Column('mode_detected', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['mobile_id'], [u'mobile_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('mobile_coordinates_survey_timestamp_idx', 'mobile_coordinates', ['survey_id', 'timestamp'], unique=False)
    op.create_index('mobile_coordinates_timestamp_idx', 'mobile_coordinates', ['timestamp'], unique=False)
    op.create_index('mobile_coordinates_user_timestamp_idx', 'mobile_coordinates', ['mobile_id', 'timestamp'], unique=False)
    op.create_table('mobile_prompt_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('mobile_id', sa.Integer(), nullable=True),
    sa.Column('prompt_uuid', sa.String(length=36), nullable=True),
    sa.Column('response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('displayed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('recorded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=16, scale=10), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=16, scale=10), nullable=True),
    sa.ForeignKeyConstraint(['mobile_id'], [u'mobile_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobile_prompt_responses_prompt_uuid'), 'mobile_prompt_responses', ['prompt_uuid'], unique=False)
    op.create_table('mobile_survey_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('mobile_id', sa.Integer(), nullable=True),
    sa.Column('response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['mobile_id'], [u'mobile_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['survey_id'], [u'surveys.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mobile_id')
    )
    op.create_table('prompt_question_choices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prompt_id', sa.Integer(), nullable=True),
    sa.Column('choice_num', sa.Integer(), nullable=True),
    sa.Column('choice_text', sa.String(length=500), nullable=True),
    sa.Column('choice_field', sa.String(length=16), nullable=True),
    sa.ForeignKeyConstraint(['prompt_id'], [u'prompt_questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('survey_question_choices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('choice_num', sa.Integer(), nullable=True),
    sa.Column('choice_text', sa.String(length=500), nullable=True),
    sa.Column('choice_field', sa.String(length=16), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], [u'survey_questions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tokens_password_reset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('web_user_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(length=60), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['web_user_id'], ['web_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_password_reset_token'), 'tokens_password_reset', ['token'], unique=False)
    op.create_table('web_user_role_lookup',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['web_user_roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['web_users.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('web_user_role_lookup')
    op.drop_index(op.f('ix_tokens_password_reset_token'), table_name='tokens_password_reset')
    op.drop_table('tokens_password_reset')
    op.drop_table('survey_question_choices')
    op.drop_table('prompt_question_choices')
    op.drop_table('mobile_survey_responses')
    op.drop_index(op.f('ix_mobile_prompt_responses_prompt_uuid'), table_name='mobile_prompt_responses')
    op.drop_table('mobile_prompt_responses')
    op.drop_index('mobile_coordinates_user_timestamp_idx', table_name='mobile_coordinates')
    op.drop_index('mobile_coordinates_timestamp_idx', table_name='mobile_coordinates')
    op.drop_index('mobile_coordinates_survey_timestamp_idx', table_name='mobile_coordinates')
    op.drop_table('mobile_coordinates')
    op.drop_index(op.f('ix_mobile_cancelled_prompt_responses_prompt_uuid'), table_name='mobile_cancelled_prompt_responses')
    op.drop_table('mobile_cancelled_prompt_responses')
    op.drop_table('web_users')
    op.drop_index('researcher_invite_survey_active_idx', table_name='tokens_researcher_invite')
    op.drop_index(op.f('ix_tokens_researcher_invite_token'), table_name='tokens_researcher_invite')
    op.drop_table('tokens_researcher_invite')
    op.drop_index(op.f('ix_survey_subway_stops_survey_id'), table_name='survey_subway_stops')
    op.drop_table('survey_subway_stops')
    op.drop_index(op.f('ix_survey_questions_question_num'), table_name='survey_questions')
    op.drop_table('survey_questions')
    op.drop_index(op.f('ix_prompt_questions_prompt_num'), table_name='prompt_questions')
    op.drop_table('prompt_questions')
    op.drop_table('mobile_users')
    op.drop_table('web_user_roles')
    op.drop_index(op.f('ix_tokens_new_survey_token'), table_name='tokens_new_survey')
    op.drop_table('tokens_new_survey')
    op.drop_table('surveys')
    # ### end Alembic commands ###
